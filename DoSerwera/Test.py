import sys
import json
import hashlib as hash
import requests
import rsa

klPub = rsa.PublicKey
klPriv = rsa.PrivateKey
a = "533b606b854ece271e820579528275719193b18d244d929ab87953a3a52ed546b92a35b8e376122a6b1fc0227fe47578403e12b34ffb9514809237fb0abeb871ec20675a66c28c039f8635666dfa25447545f2fe9004dfd28108dc072f958e1423958dbeeb007e08dbe5ed7a1d8d33320cb824b3d57c2d312dc74018b499a0402742c702ff39c4496825afd504ee53d734e4956589f2e472f317306a686b1382424bc6aaa898675f9be0d77693ab03fea4e42964294cd103e935603c8a04bd8fd22739c806b68594a95584bd3f44ab9ddb4a661839179179b6aceeb4ecf86d2f7a24db2a430e2babff2ca75a3f88456ccf4332af70b486fbb264ac69fadf1ed147a75dd7970ddef18ec2f0fac927ce669c67f62d20741009ca7fe34830082dad51fb280b7bd4d69951b6c9e2f85fd327fc463e5ca161e7d16e1c87ba80555c9d59476c0fea0b9e5370e21ed217d222df5d7ab8ca5c5ac98cf71359d4e8856d937bf4eb37f04ab7a81bd4a6483fd1bae87a58996a9375b0afb474276283a1f1a46fdf389f77b5ac8312c23868af4a9c609993b8c84a35706d76a7546e113926af23d71cadf3a23abfa1f9d6446226484b1ebcec959146c299b9a70e892bdda79cef6b922a1e1f5e646ecb9ebeca2c16343c97dbfa650f49c40b07de31a60ef477d799bbf5618865c7c3cc253309bdfe3aeed66775b85b674b8650b90c7945ee7ee1effcb7db1c82a631a93f63d2e64d1844b9810de108b10a06f2e55e31e2f5656f78e68b342bda96e206086e9c4bedcfe930bdc8acc8bb31c7ef9974046200ed55fc54c32df5e6294411f090b34c730efcdf87ddff80afcb32472ff16196465eb351916e0c82cb12eb9534de11406127a50518e811076f6397b8e4bcf9d3bce2c9c34c4bdeeb59f3ebd8ce422c0abb3bba1834ec4db77faad5d52c6ed7048f34dd693bc540d6e0e08ca62fd74b058c71178cc5901102ae41dabf9cb4dcf96eceb00141f2a29da7bf57c53b581559b82fdaff26f916175b5ac1126b61d34636b6efd5bd9256b12adfa6a99f3bfdbe77cc3491b6c77059d956927aa1a874c4990c.3b1813546311c583e9c41a08d35e6639825e580cbc96320ded7ba982c79c9b5acff83cc12fdfcfb9ba402fbbefee9c6e8a1c4f76be5cd647b9e2721e44e37abb0b7a54fd227175060a4a51b0a0e97fcdaa6a9407abe7645b9ca4a3f95ad416c9865805deafe92b156001fbfd0ad4bdb0964f58c0dc7fa3a75948fc8578fa522bcd360981dfa959fd71e7f3ab3a2ce8cef9f5ed408632dfad5e8c701965270689c48c992f7ed69b19876c929b8a9b1c70f200037bc7c9196f89f523ffdf78de0fb74e90b169175f3751805a28689f4e2c2370877d909a8790b51d8f6da2009e945c97a63b1a246bfd405060615d5e4c77a36c41a49f0570acadc0f37e3b66517043f2dd929a7b82ad4dd3aab72107be9964ee9cac7777dca4533b809d05ae52471e87543fad9ffad75418ff21fb5718b16fb9c112ecadab13d998079d07a440ef0f036d41e2415b04688a3912ed6759acb26117ab8021f7cb2519cdaffeb21cf5c3cac33aaa03edb0167e660f50152d87f08fc5d133afa6d34a835d472dc6fef7b850222e814de985d6e95abf5a5db3b4b3587c92829a7a8da98ef378b7ccfb1b7b92063049cb379a7ffe3dba034011624199d079ef4cf068680561cf3ae0bd0eec67d5cc9b73b8efc8ede827cb0bc3c17bd3512834204aac703aa6f423d3c7d8f48633a0a5d6895a33525ef5756b808a8fe873f6f8ff4f07aa8c9062259bc4eababe97e9095777b0047f060a9fa2dee8f225bd8439ef57a364940814d1d91ee0c0e068f904a39751ad599172e49fdf25596ba83a78e210ce67e6e716113d87b766cd7ffd6e2612608d1113fbc022626ccca5c871b1bf7efe2161ffe324584e3d5f18bcd2533622f68703acb771664c64293eb36553dedfcc4636113105dbf51e19fb54562cabec7ac00edd762bbaa5c51364da469224e57cfb8d9df9ad156e919bda5b4bd1d65f5c6744803fd4b14cf36f5a083d853ba8a3e02e9f3bce993bfa870e19b290cd328323a532c8fa28d4bff88b418c65fa11a971a4d104eccb66861717a1d6b674d8ba376c275d60f7a32068564b25977b99ab919a69fc78779299"
b = "818126ceb529a92541b3b53a045494f65d85ab438046710bc26584618a7971385226a66a78e55489e1bfc3f4d65634f58edbc073951dd8b1ba1bee1bdeb65da0fa51a6260ac52e75963e7b9e3a4725173f0577445b96130c55b10b9f5ab5495ef189e137cfc20f9f47f74e4a2acd3b1385acf5c840469d03861f0db6463b038d211f9f46b362cf552fb7abb0114a40fd6abcbbc9da97406101fe3d45b4268d8e5c36ad9d479b4bf0e9ff601848381518cafdb89722af89bafc79c05724566c46c901116dbfa4b90d55119572bd9f7882bb3835b837193d823ebb7b9b0695d5ebec5fd638632e9e609c5d11a99d6b09575fc4460202bd2084e7c83a98d72c672e4d3a58d5af7afd310c745024da542a101b83536a70a2f18c897a142d32ba5f6eb36da60d566e6c61412cb03c646ca72356e39ef0171cfa3beca2c5a717aecc5216e8b8b7c322e170cca9fc9cf578f45fa0c9618f8a2a5e258af64d0381a2862ea2b92e4922a434913286344cb4dae6d140e7166c131fe3e9e95071fdd138de8e76a3c9f5dbbb07a54e30f865315b0ac36849f07bbcd383365df2d3ae847499ad8101a12f3367d1cc00c46d3a2ded12a9952285dc08a4a22ffb7e45217ffe48a5e5b4374a09efeac44dd0a57cf8d4ee256749f4d242e62f5ce7592bbae3db127dd1ac11832df48d3f1c6813c5e9131ce62d51f873b48b48bb5fa68ce3e3085f7a15aa3f5bed33ce818c6688fba0d3ca3bfaafe4bc49302e39e072d58f55ef7504a778443b3682403b9724d98ee890ba3404e73aaedb7c59329aff6b53dcc9a0167e2e1136c25e18b990fdd8d9570ad6d1872315832324c6e1dda065198522883e83bbb733fb2b7564ebdf2421627b5df58a06da0d8a76ca26ae7d2af6395b19f26fef759eee14f0abb47f6f90e154b0fe49dd98caea2b29bed09e4af2825d24a9a0f88809d90614cf8ad9d0e5e106d3edc2db7343b6a7597c2395c103303e4140c4904f4f3875f8ad8b8c2b5cc03499c6c8905c02e4bbaa6fd101c6489fa9995c0e930de80e7b51a4e2c54396a7697413feaf175066148b152d61f28046521a22.00b0b43ad57dc4c21d267c2657043a2b4deae0f774b8a9168bbe8b57a0b4bcfb234eddd4e92058a8225758379b29f4bfaf074ffc5c95296c2611c7f36a9dcd20b477d61a730571d9fb68d5ae894c761a48ce0285ad5db5d0f0f3abeb79cd0afe9ffa60de1a953a7ee2a6932b75b2f8bf2e00319a5bcb781fa9a7e6bfbf7f8f42bfab451014b44441ca93549827346d8c0bf12736437cbb2a6e7afa988eead2592235f7e4baf0a049f0220d02946d7d084da3122da0c7b678b279ab5cfffbcd344bc3f7350b4960ea4153c19c7258980c58d90460e8d952eed13ebd3809d0a88c689c4778c0e8bcf506703772a8c3e059d70adc24c298e890856889a0010fb85e5b31dc6d2e61974655f669856b5cf54c0b85fa8f3ffea93bef2224357e4f88c4f91809985930a3db1346d4b381b1cdd8ba7892e99b418fde1d5f3eb3f34129ff91fdfdcbc7960ce707b223095a73a9c11464be931d81543ae3ac7bb198d399b8cdd98a3b6a4c5545deff6752802b6c41df9679fd25f988daac23ced3ff01d46c663d977f3df3aaf51884fd16a6f1d525148d35fa4f8fa2a5eafa26f396ad7ae08c139a2e689e16149d8ec740731b00354047f09887754d28f4b8019e65c3f7e7be84d1cbd8cc450e5d5faf4e4e50bc6c0ed7064061c5fa0aa8bf86c8bbe02709507fceb0c03065938268bd7f7ae4b24e73ba0b12a75e947149bf364a76bde7603e5997ed49c22bfe5bf2d643d478b19cfb164f2c169c01c22aaacef81a6d269dfe137f484642a46ae7f7ee8d465ce99588400b6a7ff2490787aafacbad2ecb034cd2dd38061867aa78fc8be9a34356bc38f1266794b0783dac9a096b3765a6abcf59a9217d07ec02db9107f47ab582d4864160114ef809df0e4cd8262a8b1a5a28ca64b5810a762d9949f1f47b11db9f1e3291aafb8df1edef20aa1b4eb15b7e4dd9f61817525f4006ac6f54b16d8567c5a590153e041d18d7dc31558ebdf38cad0205a43bb511d50e2902931c45ecca0290ed8f2fade6a9080b4ff80feba2a9c2cc230146f3ad51aef078da670626dfeeec02d7472418067c897bb313539eda.16bd18b5c25fa5b27246054d23f4a534d4757352d0c8cedb28bbbecd2863067e0194ee404fc39f898243a5e97dfe823d40114e864219fc0ab4834d8edb9523f9d20281ea49383af57129f3552d09dc24177189f965129c122b89d515e5b06875a5b47724257251093b440bb7f447f8b81adc3c1a0c9f893367f42004a80c876c640d0597747277cdf80f4bd342788f41c6d5df48966cdf2db75847f0b26b7e4579614d83ec29d900174732e5042579e9d3209330f7d1fe912bbf31a73d598b3dd2a436e6d2cc87621a95f28395f9b76b79ff04132f0e222d44f454e8e3eb26aaf4f1694412ff8aab5c1feb801cb659983b48d8d5996c59963086d058bbc22ea3f692f2ba0b778c6182251bc957d092e2d72aeb6bc8fb2e92319fd00d30d536346f84af4b8a2e40fc3dc96a631db0f6dcc368fc939f949755d939eaeca3299dbc1e68026a2bf57d02ec8886cc3e9d9b34cae1f643823a3f959b6cef076a5113038cef8a9f0df0636c295159504382def70c193954e2cb579540e44eb6d3a3f994436a505b882bdc27716a69a7043b4d1519e89d0fd19b60830aabbffa4c70dfd6c5d8df301e28beeb92470ab7bf6ed07a055adfb21974e0b6a2f97cecefa514ec3efb85c7990b5e7e3afe89e70263a9c8eb9989cf5528cdc4eb1b69817f7ef473cbb53ad296631a15516e5fd8af717b300b657988ba5502dc518d7b666ccf32e47c10c35fa0e6c86d3cf118bee5f2d9fa11f010e68db5aec442675e7bd43ea32efaec5b894f61b197f66b12935607378404124b0107da0be26c7ea439900111601e4df71e664a89460ffbb5df3639e9c0eaf1d33e89dcf5ade77ac4a8291d240791ba5030bf2a59df76fe7105965f0b02162f6788ef9ecebdc904fbad313b7854ffe7283178c2d3078d7fce56933b3854765834df93030dcf85bfaa109f875fce8f47293b4115fab684912aaea353aa834d45bd3c0bbf7482c7aca016a0941755f99a8a6360ac7c4eaaab64e7db2d9f8e6e1a8240ec2247f7da0b07337a473a03805c78821ca6e036c83a12258760f7f0c3a3bdcd0588429fbce266e54fa2932d.0fa3395abf5547dd795e85b3727ec14f73ce431e46d5cf2b4b4c8ac3b010af544c6288b7bb82db68ca9d20de430b05b0abd8cfc74f92b7e7065e9e3e78ee8347c44b9c6c4d8830fa4afd8b5f555d6b9a80ea6cd0001e10dd0246c84e040a729c3d7eeaed86f54c8d959308538e3dc1b18248c45db428aead235057f46bf91e86eedb9d225bdc334a7fd072cab0cef597ea072566e303a8a84e88457c6db60f2603c2866a5c2c0b25baa72b55aeb9561fe9881a396d3f6bb28fe5b585c6b1c45bd96f809fef1e66b3da7949d62b3f40e33fa0e60ddad18d7812bf38aae7b394926794d9f29219a861376b930691cc994ed9319e91d1f90649eebb4827bba39127b06d9719ffe7f93a3506900578443e803c29ca2d649b4bd1aacb4641e7afabda566a8082da107b1515e67e9ce6cbfcdf1dd107b7dc47ebe8fc78cb8987c6c2aa674cbb70a6590facf97b5712c3565e4f6bcb3cac88a0b79ad8889461cc0b850a64b3026a3dcc877dffc50b42cc7194a34f0875d444b57949a430da4ad03d29b553213cdf5acce4d0a9ad694f045742c14f68bf992e3045ad81f8339695eb13615f66943e0bf1ff432cb99a89c8135ed441fe3a51f96f389e6da7676f1e3722b1c02798fd728e7d40b3a8d8fdd55312e7842af8a8bdd158b80ddf52736b0dae1fc8d9afb06bde7eb626c8b11cde7379561b9881068704f3acab13123132ce5457dbebfee82d93a37efe6c1feda5d649c9f3c8249ea36ac849e7073a53b22621328047a817dcb6a1ab7fb432bb5fda72a172c104e49a8f4aeedfdef0b5cb5536531f0f568503024d69b0f33252c6b7966e341fcdecfb518ff3c1678d665d78884de18aeb38c5cfef50c8888228f66c4e7189ce30af7cedcadff76f595ab8428a244728801b0aa4155e55cbab3f37f1be613514cdd376d584ceee9901985087e28e4b11dc5db043e9d879df8d4a4c20c0ae6660ab8fa633f2e79c438e37ad649179eb2a5f5fe04c31ee998c9289390f842d98fc0f458eeebe1f6ec647eb766c7c3665a0383f1b3f40317b0c11c4c0e6b65f28084bf23069f7c6c56b891b503a6657.337791ec4fe7b8827e2ad757161e8280f4e7e6918851ded1918fcf34e4da4e7966e14313c5c9efcf93a3598aa3dbb5c70b7b1ccea91f9a4f9136b414091afbcf59f5f62403b6b2f2ca6a1531435c098f36899d24f8bb8e3c09105b7cbf33672308f9f62550ee49c7091204e3fcc389b5d47db43dff2015f13dd565bb2fc33dee54c7062c3a50a86b003b026252d2dfa9185b9dbb7d20c13f285dd17be074b3185fafb4b9ee2bfff018eef98338f1d64e1f1c7fd85ec098fcff7dabf9a5e470e6792ae1cc469754d7c43f01a4298d382874817f8f7c4ef6c38b8d40b6fe179af4cd09c4f69605728d195ad91babfde97e16b54f03e808062fadb20c7d336e8e44f16abb82c32d69821ef1e6ccb5131aadbc6e40b0c1335d8f7b9921e97b4f8f166d4fdbe5ba31714045e1a2c0f67bc0f3b758f7e197d719097ffc782a3989631d118e426ff37b346f2aa6a0379618977c91205870bed0ffec44e79e25651e930f255dcc00cef7eb798d5363077a1315fa9093d1d3766c3acf9c210e6b29b624682c51e9e48eaab570742b0e3416f3e3b618ad9c18c079ef92f8f5c32010063035081d020d1e27d04ced65748d572c20f46dd3155b4922a1ae559e7ff3586192b72877d72f534a19fd3291c9e66316333f5c529b462283455787e91b8f5bc632ff35a3da0966616013da4d2e35b41fdf0497c299339bfb066a1185dcca8b86d82c3740ac177c9561a6675acf2d4cad611daefa27fd5451b2855a4e21f4e75e28ffe939f7a5118c525be6103b397760948a0faa11988e28db5862d6175da199b0310eb09a1891a4d07a84dde598ceeb5738edef967a2c57fd9ec34f0cfacc9d8413004544ae482fce080ee4ad9b6a41bbf1046425727ff72517dd1586716350e96c5c4e9069125026265a11737160f2efd8454fc98b051b2afb0cc5c7377aa7af0821c10a151d5aa3e073b4b55c2ff5c606b57a5ae80d2b5287ae9d28b4f52477b730fed3066a76b5a59d68d4fbe9a64f9a03166e987005784a5ef8f38c940ee4311c92413c59ef3dad628fe10105cd4389b945ea5c51811825416cec7a555a1202"
a = a.split(".")
b = b.split(".")
for i in range(2):
    a[i] = bytes.fromhex(a[i])
    a[i] = int(rsa.decrypt(a[i],klPriv).decode())
for i in range(5):
    b[i] = bytes.fromhex(b[i])
    b[i] = int(rsa.decrypt(b[i],klPriv).decode())

kPubPok = rsa.PublicKey(a[0],a[1])
kPrivPok = rsa.PrivateKey(b[0],b[1],b[2],b[3],b[4])

if(len(sys.argv)<2):
    print("Nie podano numeru testu!\n")
else:
    nr: int = int(sys.argv[1])
    koder = json.JSONEncoder(ensure_ascii=False)
    slownik: dict = {}
    
    if(nr==0):
        #Test podania nieznanej operacji
        slownik['operacja'] = "nieznane cos"
        slownik['projekt'] = "Projekt12345"
        
    
    elif(nr==1):
        #Test logowania przy niepoprawnej nazwie projektu
        slownik['operacja'] = "logowanie"
        slownik['projekt'] = "Proj"
        slownik['dana1'] = "Uzytkownik711"
        slownik['dana2'] = "Haslo12345"
        
    elif(nr==2):
        #Test logowania przy niepoprawnym loginie
        slownik['operacja'] = "logowanie"
        slownik['projekt'] = "Projekt12345"
        slownik['dana1'] = "Uz"
        slownik['dana2'] = "Haslo12345!"
    
    elif(nr==3):
        #Test logowania przy niepoprawnym haśle
        slownik['operacja'] = "logowanie"
        slownik['projekt'] = "Projekt12345"
        slownik['dana1'] = "Uzytkownik711"
        slownik['dana2'] = "Has'lo12345!"
    
    elif(nr==4):
        #Test logowania
        slownik['operacja'] = "logowanie"
        slownik['projekt'] = "Projekt12345"
        slownik['dana1'] = "Uzytkownik711"
        slownik['dana2'] = "Haslo12345!"
    
    elif(nr==5):
        #Test rejestracji
        slownik['operacja'] = "rejestracja"
        slownik['projekt'] = "Projekt12345"
        slownik['dana1'] = "1234567890abcde12345AA"
        slownik['dana2'] = hash.sha3_512(("Uzytkownik711").encode()).hexdigest()
        slownik['dana3'] = hash.sha3_512(("Haslo12345!").encode()).hexdigest()
        slownik['dana4'] = "NickUzytkownika711"
    
    elif(nr==6):
        #Test tworzenia projektu
        slownik['operacja'] = "tworzenie projektu"
        slownik['projekt'] = "Projekt12345"
        slownik['dana1'] = hash.sha3_512(("Uzytkownik711").encode()).hexdigest()
        slownik['dana2'] = hash.sha3_512(("Haslo12345!").encode()).hexdigest()
        slownik['dana3'] = "NickUzytkownika711"
        slownik['dana4'] = str(klPub.n)+"."+str(klPub.e)
    
    elif(nr==7):
        #Test zapraszania do projektu
        slownik['operacja'] = "zapraszanie"
        slownik['projekt'] = "Projekt12345"
        slownik['dana1'] = "Uzytkownik711"
        slownik['dana2'] = "token12345token0987654321A"     # tu zwrócony w terminalu token
        slownik['dana3'] = hash.sha3_512(("1234567890abcde12345AA").encode()).hexdigest()
    
    elif(nr==8):
        #Test usuwania projektu
        slownik['operacja'] = "usuwanie projektu"
        slownik['projekt'] = "Projekt12345"
        slownik['dana1'] = "Uzytkownik711"
        slownik['dana2'] = "token12345token0987654321A"     # tu zwrócony w terminalu token
    
    elif(nr==9):
        #Test tworzenia pokoju
        slownik['operacja'] = "tworzenie pokoju"
        slownik['projekt'] = "Projekt12345"
        slownik['dana1'] = "Uzytkownik711"
        slownik['dana2'] = "token12345token0987654321A"     # tu zwrócony w terminalu token
        slownik['dana3'] = "Pokoj123456788"
    
    elif(nr==10):
        #Test usuwania pokoju
        slownik['operacja'] = "usuwanie pokoju"
        slownik['projekt'] = "Projekt12345"
        slownik['dana1'] = "Uzytkownik711"
        slownik['dana2'] = "token12345token0987654321A"     # tu zwrócony w terminalu token
        slownik['dana3'] = "Pokoj123456788"
    
    elif(nr==11):
        #Test dodawania do pokoju
        slownik['operacja'] = "dodawanie do pokoju"
        slownik['projekt'] = "Projekt12345"
        slownik['dana1'] = "Uzytkownik711"
        slownik['dana2'] = "token12345token0987654321A"     # tu zwrócony w terminalu token
        slownik['dana3'] = "Pokoj123456788"
        slownik['dana4'] = "DodawanyUzytkownik123"
        slownik['dana5'] = "klucz123"
        slownik['dana6'] = "klucz321"
    
    elif(nr==12):
        #Test usuwania z pokoju
        slownik['operacja'] = "usuwanie z pokoju"
        slownik['projekt'] = "Projekt12345"
        slownik['dana1'] = "Uzytkownik711"
        slownik['dana2'] = "token12345token0987654321A"     # tu zwrócony w terminalu token
        slownik['dana3'] = "Pokoj123456788"
        slownik['dana4'] = "UsuwanyUzytkownik123"
    
    elif(nr==13):
        #Test pobierania listy pokojów
        slownik['operacja'] = "lista pokojow"
        slownik['projekt'] = "Projekt12345"
        slownik['dana1'] = "Uzytkownik711"
        slownik['dana2'] = "token12345token0987654321A"     # tu zwrócony w terminalu token
    
    elif(nr==14):
        #Test modyfikacji (dodawanie, usuwanie, modyfikacja) tasków (od razu razem z pobraniem)
        slownik['operacja'] = "modyfikacja taskow"
        slownik['projekt'] = "Projekt12345"
        slownik['dana1'] = "Uzytkownik711"
        slownik['dana2'] = "token12345token0987654321A"     # tu zwrócony w terminalu token
        slownik['dana3'] = "Pokoj123456788"
        slownik['DodawanyTask1'] = [1, rsa.encrypt("nazwaTaska1".encode(),kPubPok).hex(),[12,2,2025],[100.06,157.0],[2,3,5]]
        slownik['DodawanyTask2'] = [2,rsa.encrypt("nazwaTaska2".encode(),kPubPok).hex(),[1,1,2025],[120.06,17.0],[3]]
        slownik['DodawanyTask3'] = [3,rsa.encrypt("nazwaTaska3".encode(),kPubPok).hex(),[10,1,2025],[20.06,1007.47],[4,5]]
        slownik['DodawanyTask4'] = [4,rsa.encrypt("nazwaTaska4".encode(),kPubPok).hex(),[20,12,2024],[220.06,1004.7],[5]]
        slownik['DodawanyTask5'] = [5,rsa.encrypt("nazwaTaska5".encode(),kPubPok).hex(),[1,12,2024],[426.66,711.711],[1]]
        slownik['DodawanyTask6'] = [6,rsa.encrypt("nazwaTaska6".encode(),kPubPok).hex(),[11,12,2026],[46.66,71.711],[7,8]]
        slownik['DodawanyTask7'] = [7,rsa.encrypt("nazwaTaska7".encode(),kPubPok).hex(),[1,12,2026],[469.66,71.711],[1]]
        slownik['DodawanyTask8'] = [8,rsa.encrypt("nazwaTaska8".encode(),kPubPok).hex(),[14,7,2026],[568.66,711.711],[1]]
        slownik['UsuwanyTask1'] = [5,rsa.encrypt("nazwaTaska5".encode(),kPubPok).hex(),[11,12,2026],[46.66,71.711],[1]]
        slownik['ModyfikowanyTask1'] = [7,rsa.encrypt("nazwaTaska71".encode(),kPubPok).hex(),[1,12,2026],[469.66,71.711],[8]]
        slownik['ModyfikowanyTask2'] = [8,rsa.encrypt("nazwaTaska81".encode(),kPubPok).hex(),[14,7,2026],[568.66,711.711],[1,2,3,4,5]]
    
    elif(nr==15):
        #Test zaznaczania tasku jako wykonanego
        slownik['operacja'] = "zaznacz task"
        slownik['projekt'] = "Projekt12345"
        slownik['dana1'] = "Uzytkownik711"
        slownik['dana2'] = "token12345token0987654321A"     # tu zwrócony w terminalu token
        slownik['dana3'] = "Pokoj123456788"
        slownik['dana4'] = 1
    
    elif(nr==16):
        #Test odznaczania tasku jako niewykonanego
        slownik['operacja'] = "odznacz task"
        slownik['projekt'] = "Projekt12345"
        slownik['dana1'] = "Uzytkownik711"
        slownik['dana2'] = "token12345token0987654321A"     # tu zwrócony w terminalu token
        slownik['dana3'] = "Pokoj123456788"
        slownik['dana4'] = 1
    
    elif(nr==17):
        #Test pobierania chatu
        slownik['operacja'] = "pobierz chat"
        slownik['projekt'] = "Projekt12345"
        slownik['dana1'] = "Uzytkownik711"
        slownik['dana2'] = "token12345token0987654321A"     # tu zwrócony w terminalu token
        slownik['dana3'] = "Pokoj123456788"
    
    elif(nr==18):
        #Test aktualizacji chatu
        slownik['operacja'] = "zaktualizuj chat"
        slownik['projekt'] = "Projekt12345"
        slownik['dana1'] = "Uzytkownik711"
        slownik['dana2'] = "token12345token0987654321A"     # tu zwrócony w terminalu token
        slownik['dana3'] = "Pokoj123456788"
        slownik['dana4'] = "Uzytkownik711"
        slownik['dana5'] = 1234567788
    
    elif(nr==19):
        #Test wysyłania wiadomości
        slownik['operacja'] = "wyslij wiadomosc"
        slownik['projekt'] = "Projekt12345"
        slownik['dana1'] = "Uzytkownik711"
        slownik['dana2'] = "token12345token0987654321A"     # tu zwrócony w terminalu token
        slownik['dana3'] = "Pokoj123456788"
        slownik['dana4'] = "Uzytkownik711711"
        slownik['dana5'] = 1234567788
        slownik['dana6'] = rsa.encrypt("Wiadomość'admina".encode(),kPubPok).hex()
    
    elif(nr==20):
        #Test pobierania kalendarza
        slownik['operacja'] = "pobierz kalendarz"
        slownik['projekt'] = "Projekt12345"
        slownik['dana1'] = "Uzytkownik711"
        slownik['dana2'] = "token12345token0987654321A"     # tu zwrócony w terminalu token
        slownik['dana3'] = "Pokoj123456788"
    
    elif(nr==21):
        #Test dodawania wpisu do kalendarza
        slownik['operacja'] = "dodawanie wpisu kalendarza"
        slownik['projekt'] = "Projekt12345"
        slownik['dana1'] = "Uzytkownik711"
        slownik['dana2'] = "token12345token0987654321A"     # tu zwrócony w terminalu token
        slownik['dana3'] = "Pokoj123456788"
        slownik['dana4'] = rsa.encrypt("Wpis12345".encode(),kPubPok).hex()
        slownik['dana5'] = [6,7,2025]
    
    elif(nr==22):
        #Test usuwania wpisu z kalendarza
        slownik['operacja'] = "usuwanie wpisu kalendarza"
        slownik['projekt'] = "Projekt12345"
        slownik['dana1'] = "Uzytkownik711"
        slownik['dana2'] = "token12345token0987654321A"     # tu zwrócony w terminalu token
        slownik['dana3'] = "Pokoj123456788"
        slownik['dana4'] = rsa.encrypt("Wpis12345".encode(),kPubPok).hex()
        slownik['dana5'] = [6,7,2025]
    
    elif(nr==23):
        #Test modyfikowania wpisu kalendarza
        slownik['operacja'] = "modyfikacja wpisu kalendarza"
        slownik['projekt'] = "Projekt12345"
        slownik['dana1'] = "Uzytkownik711"
        slownik['dana2'] = "token12345token0987654321A"     # tu zwrócony w terminalu token
        slownik['dana3'] = "Pokoj123456788"
        slownik['dana4'] = rsa.encrypt("Wpis12345".encode(),kPubPok).hex()
        slownik['dana5'] = [6,7,2025]
        slownik['dana6'] = rsa.encrypt("Wpis711".encode(),kPubPok).hex()
        slownik['dana7'] = [7,11,2025]
    
    elif(nr==24):
        #Test dodawania pliku
        slownik['operacja'] = "dodawanie pliku"
        slownik['projekt'] = "Projekt12345"
        slownik['dana1'] = "Uzytkownik711"
        slownik['dana2'] = "token12345token0987654321A"     # tu zwrócony w terminalu token
        slownik['dana3'] = "Pokoj123456788"
        slownik['dana4'] = rsa.encrypt("Plik711.uwu".encode(),kPubPok).hex()
        slownik['dana5'] = rsa.encrypt("Zdecydowanie bardzo ważna zawartość pliku\nUwU".encode(),kPubPok).hex()
    
    elif(nr==25):
        #Test usuwania pliku
        slownik['operacja'] = "usuwanie pliku"
        slownik['projekt'] = "Projekt12345"
        slownik['dana1'] = "Uzytkownik711"
        slownik['dana2'] = "token12345token0987654321A"     # tu zwrócony w terminalu token
        slownik['dana3'] = "Pokoj123456788"
        slownik['dana4'] = 2
    
    elif(nr==26):
        #Test pobierania pliku
        slownik['operacja'] = "pobranie pliku"
        slownik['projekt'] = "Projekt12345"
        slownik['dana1'] = "Uzytkownik711"
        slownik['dana2'] = "token12345token0987654321A"     # tu zwrócony w terminalu token
        slownik['dana3'] = "Pokoj123456788"
        slownik['dana4'] = 2
    
    elif(nr==27):
        #Test pobierania listy plików z pokoju
        slownik['operacja'] = "pobranie listy plikow"
        slownik['projekt'] = "Projekt12345"
        slownik['dana1'] = "Uzytkownik711"
        slownik['dana2'] = "token12345token0987654321A"     # tu zwrócony w terminalu token
        slownik['dana3'] = "Pokoj123456788"

    elif(nr==28):
        #Test ustawiania klucza użytkownika
        slownik['operacja'] = "ustawianie klucza"
        slownik['projekt'] = "Projekt12345"
        slownik['dana1'] = "Uzytkownik711"
        slownik['dana2'] = "token12345token0987654321A"     # tu zwrócony w terminalu token
        slownik['dana3'] = "klucz1234567890"
    
    elif(nr==29):
        #Test pobierania klucza publicznego użytkownika
        slownik['operacja'] = "pobieranie klucza uzytkownika"
        slownik['projekt'] = "Projekt12345"
        slownik['dana1'] = "Uzytkownik711"
        slownik['dana2'] = "token12345token0987654321A"     # tu zwrócony w terminalu token
        slownik['dana3'] = "NickInnegoUzytkownika12711"
    
    elif(nr==30):
        #Test pobierania listy niezweryfikowanych użytkowników
        slownik['operacja'] = "lista niezweryfikowanych"
        slownik['projekt'] = "Projekt12345"
        slownik['dana1'] = "Uzytkownik711"
        slownik['dana2'] = "token12345token0987654321A"     # tu zwrócony w terminalu token

    elif(nr==31):
        #Test ustawiania użytkownikowi nowej roli
        slownik['operacja'] = "zmiana roli"
        slownik['projekt'] = "Projekt12345"
        slownik['dana1'] = "Uzytkownik711"
        slownik['dana2'] = "token12345token0987654321A"     # tu zwrócony w terminalu token
        slownik['dana3'] = "NickInnegoUzytkownika12711"
        slownik['dana4'] = "NowaRola123456788"
    
    elif(nr==32):
        #Test weryfikacji użytkownika
        slownik['operacja'] = "weryfikacja"
        slownik['projekt'] = "Projekt12345"
        slownik['dana1'] = "Uzytkownik711"
        slownik['dana2'] = "token12345token0987654321A"     # tu zwrócony w terminalu token
        slownik['dana3'] = "NickInnegoUzytkownika12711"
        slownik['dana4'] = "NowaRola123456788"
        slownik['dana5'] = "ZdecydowanieZaszyfrowanyKluczPubliczny"
        slownik['dana6'] = "ZdecydowanieZaszyfrowanyKluczPrywatny"
    
    
    else:
        slownik['operacja'] = "Nieznany numer testu"

    wynik = requests.post("http://localhost:8000",json=koder.encode(slownik))
    dekoder = json.JSONDecoder()
    dane: dict = dekoder.decode(wynik.text)
    print(dane)